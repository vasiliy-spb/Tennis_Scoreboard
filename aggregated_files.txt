================================================================================
АГРЕГИРОВАННЫЕ ФАЙЛЫ ПРОЕКТА
Источник: /Users/vasiliy/IdeaProjects/Tennis_Scoreboard
Создано: Sat Aug 16 19:21:25 GMT+07:00 2025
================================================================================


/==============================================================================/
// ФАЙЛ: src/main/java/dev/chearcode/new_model/Match.java
/==============================================================================/
   1 | package dev.chearcode.new_model;
   2 | 
   3 | import dev.chearcode.new_model.playerScore.GameScore;
   4 | import dev.chearcode.new_model.playerScore.MatchScore;
   5 | import dev.chearcode.new_model.playerScore.Score;
   6 | import dev.chearcode.new_model.playerScore.SetScore;
   7 | 
   8 | import java.util.Map;
   9 | import java.util.UUID;
  10 | 
  11 | public class Match {
  12 |     private final UUID id;
  13 |     private final Player firstPlayer;
  14 |     private final Player secondPlayer;
  15 |     private final Map<Player, Score> scores;
  16 | 
  17 |     public Match(UUID id, Player firstPlayer, Player secondPlayer) {
  18 |         this.id = id;
  19 |         this.firstPlayer = firstPlayer;
  20 |         this.secondPlayer = secondPlayer;
  21 |         this.scores = Map.of(
  22 |                 firstPlayer, new Score(),
  23 |                 secondPlayer, new Score()
  24 |         );
  25 |     }
  26 | 
  27 |     public void showResult() {
  28 |         System.out.println("--------------------- R E S U L T S ---------------------");
  29 |         System.out.printf("Player: %s\t\t\tPlayer: %s\n", firstPlayer.getName(), secondPlayer.getName());
  30 |         System.out.printf("Game:   %s\t\t\tGame:   %s\n", scores.get(firstPlayer).getGameScore(), scores.get(secondPlayer).getGameScore());
  31 |         System.out.printf("Set:    %s\t\t\tSet:    %s\n", scores.get(firstPlayer).getSetScore(), scores.get(secondPlayer).getSetScore());
  32 |         System.out.printf("Match:  %s\t\t\tMatch:  %s\n", scores.get(firstPlayer).getMatchScore(), scores.get(secondPlayer).getMatchScore());
  33 |     }
  34 | 
  35 |     public void addPoint(Player player) {
  36 |         if (isGameOver()) {
  37 |             return;
  38 |         }
  39 | 
  40 |         Score winnerPlayerScore = getWinnerScore(player);
  41 |         Score loserPlayerScore = getLoserScore(player);
  42 | 
  43 |         addGamePoint(winnerPlayerScore);
  44 | 
  45 |         if (loserPlayerScore.getGameScore() == GameScore.ADVANTAGE) {
  46 |             if (winnerPlayerScore.getGameScore() == GameScore.FORTY || winnerPlayerScore.getGameScore() == GameScore.ADVANTAGE) {
  47 |                 loserPlayerScore.setGameScore(GameScore.DEUCE);
  48 |                 winnerPlayerScore.setGameScore(GameScore.DEUCE);
  49 |             } else {
  50 |                 loserPlayerScore.setGameScore(GameScore.FORTY);
  51 |             }
  52 |         }
  53 | 
  54 |         if (winnerPlayerScore.getGameScore() == GameScore.GAME) {
  55 |             resetGameScore(winnerPlayerScore, loserPlayerScore);
  56 |             addSetPoint(winnerPlayerScore);
  57 | 
  58 |             if (winnerPlayerScore.getSetScore() == SetScore.SET) {
  59 |                 resetSetScore(winnerPlayerScore, loserPlayerScore);
  60 |                 addMatchPoint(winnerPlayerScore);
  61 |             }
  62 |         } else if (winnerPlayerScore.getGameScore() == GameScore.FORTY) {
  63 |             if (loserPlayerScore.getGameScore() == GameScore.FORTY) {
  64 |                 winnerPlayerScore.setGameScore(GameScore.DEUCE);
  65 |                 loserPlayerScore.setGameScore(GameScore.DEUCE);
  66 |             }
  67 |         }
  68 |     }
  69 | 
  70 |     private void resetSetScore(Score firstPlayerPlayerScore, Score secondPlayerPlayerScore) {
  71 |         firstPlayerPlayerScore.resetSetScore();
  72 |         secondPlayerPlayerScore.resetSetScore();
  73 |     }
  74 | 
  75 |     private void resetGameScore(Score firstPlayerPlayerScore, Score secondPlayerPlayerScore) {
  76 |         firstPlayerPlayerScore.resetGameScore();
  77 |         secondPlayerPlayerScore.resetGameScore();
  78 |     }
  79 | 
  80 |     private void addGamePoint(Score playerScore) {
  81 |         int currentScoreIndex = playerScore.getGameScore().ordinal();
  82 |         GameScore nextScore = GameScore.values()[currentScoreIndex + 1];
  83 |         if (nextScore == GameScore.DEUCE) {
  84 |             nextScore = GameScore.ADVANTAGE;
  85 |         }
  86 |         playerScore.setGameScore(nextScore);
  87 |     }
  88 | 
  89 |     private void addSetPoint(Score playerScore) {
  90 |         int currentScoreIndex = playerScore.getSetScore().ordinal();
  91 |         SetScore nextScore = SetScore.values()[currentScoreIndex + 1];
  92 |         playerScore.setSetScore(nextScore);
  93 |     }
  94 | 
  95 |     private void addMatchPoint(Score playerScore) {
  96 |         int currentScoreIndex = playerScore.getMatchScore().ordinal();
  97 |         MatchScore nextScore = MatchScore.values()[currentScoreIndex + 1];
  98 |         playerScore.setMatchScore(nextScore);
  99 |     }
 100 | 
 101 |     private Score getLoserScore(Player winner) {
 102 |         Player loser = getLoser(winner);
 103 |         return scores.get(loser);
 104 |     }
 105 | 
 106 |     private Score getWinnerScore(Player player) {
 107 |         return scores.get(player);
 108 |     }
 109 | 
 110 |     private Player getLoser(Player winner) {
 111 |         return winner.getName().equals(firstPlayer.getName()) ? secondPlayer : firstPlayer;
 112 |     }
 113 | 
 114 |     public boolean isGameOver() {
 115 |         return scores.get(firstPlayer).getMatchScore().equals(MatchScore.MATCH) ||
 116 |                scores.get(secondPlayer).getMatchScore().equals(MatchScore.MATCH);
 117 |     }
 118 | 
 119 |     public Score getScore(Player player) {
 120 |         return scores.get(player);
 121 |     }
 122 | 
 123 |     public UUID getId() {
 124 |         return id;
 125 |     }
 126 | 
 127 |     public Player getFirstPlayer() {
 128 |         return firstPlayer;
 129 |     }
 130 | 
 131 |     public Player getSecondPlayer() {
 132 |         return secondPlayer;
 133 |     }
 134 | }

/------------------------------------------------------------------------------/


/==============================================================================/
// ФАЙЛ: src/main/java/dev/chearcode/new_model/Player.java
/==============================================================================/
   1 | package dev.chearcode.new_model;
   2 | 
   3 | import java.util.UUID;
   4 | 
   5 | public class Player {
   6 |     private final UUID id;
   7 |     private final String name;
   8 | 
   9 |     public Player(UUID id, String name) {
  10 |         this.id = id;
  11 |         this.name = name;
  12 |     }
  13 | 
  14 |     public UUID getId() {
  15 |         return id;
  16 |     }
  17 | 
  18 |     public String getName() {
  19 |         return name;
  20 |     }
  21 | }

/------------------------------------------------------------------------------/


/==============================================================================/
// ФАЙЛ: src/main/java/dev/chearcode/new_model/playerScore/GameScore.java
/==============================================================================/
   1 | package dev.chearcode.new_model.playerScore;
   2 | 
   3 | public enum GameScore {
   4 |     LOVE,
   5 |     FIFTEEN,
   6 |     THIRTY,
   7 |     FORTY,
   8 |     DEUCE,
   9 |     ADVANTAGE,
  10 |     GAME;
  11 | }

/------------------------------------------------------------------------------/


/==============================================================================/
// ФАЙЛ: src/main/java/dev/chearcode/new_model/playerScore/MatchScore.java
/==============================================================================/
   1 | package dev.chearcode.new_model.playerScore;
   2 | 
   3 | public enum MatchScore {
   4 |     ZERO,
   5 |     ONE,
   6 |     MATCH;
   7 | }

/------------------------------------------------------------------------------/


/==============================================================================/
// ФАЙЛ: src/main/java/dev/chearcode/new_model/playerScore/Score.java
/==============================================================================/
   1 | package dev.chearcode.new_model.playerScore;
   2 | 
   3 | public class Score {
   4 |     private GameScore gameScoreValue;
   5 |     private SetScore setScoreValue;
   6 |     private MatchScore matchScoreValue;
   7 | 
   8 |     public Score() {
   9 |         this.gameScoreValue = GameScore.LOVE;
  10 |         this.setScoreValue = SetScore.ZERO;
  11 |         this.matchScoreValue = MatchScore.ZERO;
  12 |     }
  13 | 
  14 |     public void resetGameScore() {
  15 |         this.gameScoreValue = GameScore.LOVE;
  16 |     }
  17 | 
  18 |     public void resetSetScore() {
  19 |         this.setScoreValue = SetScore.ZERO;
  20 |     }
  21 | 
  22 |     public GameScore getGameScore() {
  23 |         return gameScoreValue;
  24 |     }
  25 | 
  26 |     public void setGameScore(GameScore gameScoreValue) {
  27 |         this.gameScoreValue = gameScoreValue;
  28 |     }
  29 | 
  30 |     public SetScore getSetScore() {
  31 |         return setScoreValue;
  32 |     }
  33 | 
  34 |     public void setSetScore(SetScore setScoreValue) {
  35 |         this.setScoreValue = setScoreValue;
  36 |     }
  37 | 
  38 |     public MatchScore getMatchScore() {
  39 |         return matchScoreValue;
  40 |     }
  41 | 
  42 |     public void setMatchScore(MatchScore matchScoreValue) {
  43 |         this.matchScoreValue = matchScoreValue;
  44 |     }
  45 | }

/------------------------------------------------------------------------------/


/==============================================================================/
// ФАЙЛ: src/main/java/dev/chearcode/new_model/playerScore/SetScore.java
/==============================================================================/
   1 | package dev.chearcode.new_model.playerScore;
   2 | 
   3 | public enum SetScore {
   4 |     ZERO,
   5 |     ONE,
   6 |     TWO,
   7 |     THREE,
   8 |     FOUR,
   9 |     FIFE,
  10 |     SIX,
  11 |     SET;
  12 | }

/------------------------------------------------------------------------------/

================================================================================
КОНЕЦ ФАЙЛА
================================================================================
